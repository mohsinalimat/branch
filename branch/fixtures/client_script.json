[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 0,
  "modified": "2022-03-02 16:12:02.973538",
  "module": "Branch",
  "name": "Quotation-Form",
  "script": "frappe.ui.form.on(\"Quotation Item\", \n\n    { \n\n        item_code: function(frm, cdt, cdn) \n\n            { \n\n  var d = locals[cdt][cdn];\n\n                //console.log(\"Test : Item Code: \" + d.item_code);\n\n                frappe.call(\n\n                    { \n\n                        method: \"frappe.client.get_value\",\n\n                        args: { \n\n                            doctype: \"Item\", \n\n                            filters: {\n\n                               // price_list: frm.doc.mrp_price_list, \n\n                            //    price_list: \"MRP\", \n\n                                item_code: d.item_code\n\n                            },\n\n                            fieldname:[\"last_purchase_rate\"]\n\n                        },\n\n                        callback: function(r) \n\n                            \n\n                            { \n\n                                if(r.message) \n\n                                    { \n\n                                        var item_last_pur_rate = r.message; \n\n    \t                            console.log(\"mrp: \" + item_last_pur_rate.last_purchase_rate);\n                                    //frappe.msgprint(__(\"Last Purchase Rate: \"+'<b>'+ item_last_pur_rate.last_purchase_rate +'</b>'));\n\n                            }\n\n                            }\n\n                    });   \n\n            } \n\n    }\n\n);\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2022-03-02 16:29:39.131080",
  "module": "Branch",
  "name": "Sales Invoice-Form",
  "script": "/*\r\nfrappe.ui.form.on(\"Sales Invoice\", \"onload\", function(frm) {\r\n    frm.set_query(\"company_branch\", function() {\r\n        return {\r\n            \"filters\": {\r\n                \"company\": frm.doc.company\r\n                }\r\n            };\r\n    });\r\n});\r\n\r\n\r\n\r\nfrappe.ui.form.on(\"Sales Invoice\", \"update_stock\", function(frm) {\r\n    frm.set_query(\"set_warehouse\", function() {\r\n        return {\r\n            \"filters\": {\r\n                \"company\": frm.doc.company,\r\n                \"company_branch\": frm.doc.company_branch\r\n                }\r\n            };\r\n    });\r\n});\r\n\r\n\r\n\r\nfrappe.ui.form.on(\"Sales Invoice\", {\r\n  update_stock: function (frm) {\r\n    frm.set_query(\"warehouse\", \"items\", function (doc, cdt, cdn) {\r\n      let row = locals[cdt][cdn];\r\n      return {\r\n        \"filters\": {\r\n          \"company\": frm.doc.company,\r\n          \"company_branch\": frm.doc.company_branch\r\n        },\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\n*/\r\n/*frappe.ui.form.on(\"Sales Invoice\", \"validate\", function(frm, cdt, cdn) { \r\n\t$.each(frm.doc.items || [], function(i, d) {\r\n\t\tif(d.rate <= 0 && d.free_item != 1) {\r\n\t\t\tfrappe.msgprint('<b>'+d.item_code+'</b>' +\" Rate is 0\" +d.qty);\r\n\t\t\tvalidated = false;\r\n\t\t}\r\n\t})\r\n}); */\r\n\r\n/*\r\nsales_order_btn: function() {\r\n            var me = this;\r\n            this.$sales_order_btn = this.frm.add_custom_button(__('Sales Order'),\r\n                    function() {\r\n                            erpnext.utils.map_current_doc({\r\n                                    method: \"erpnext.selling.doctype.sales_order.sales_order.make_sales_invoice\",\r\n                                    source_doctype: \"Sales Order\",\r\n                                    target: me.frm,\r\n                                    setters: [{\r\n                                            fieldtype: 'Data',\r\n                                            label: __('OR No'),\r\n                                            fieldname: 'po_no',\r\n                                    }],\r\n                                            customer: me.frm.doc.customer || undefined,\r\n                                    get_query_filters: {\r\n                                            docstatus: 1,\r\n                                            status: [\"not in\", [\"Closed\", \"On Hold\"]],\r\n                                            per_billed: [\"<\", 99.99],\r\n                                            company: me.frm.doc.company\r\n                                    }\r\n                            })\r\n                    }, __(\"Get items from\"));\r\n    }\r\n*/\r\n\r\n\r\n\r\n\r\n/*\r\n\r\ncur_frm.cscript.qty = function(doc,cdt,cdn){\r\n\r\n\tvar d = locals[cdt][cdn];\r\n\r\n\tif (d.qty){\r\n\r\n  //if (flt(d.qty) > 5) {\r\n\r\n  \tfrappe.msgprint(__(\"Item Rate: \"+'<b>'+d.rate+'</b>'));\r\n\r\n  \t//d.qty = 0;\r\n\r\n  \t//refresh_field('qty', d.name, 'items');\r\n  //}\r\n\r\n}\r\n\r\n}\r\n*/\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n//                  PRICE LIST RATE GET\r\n\r\nfrappe.ui.form.on(\"Sales Invoice Item\", \r\n\r\n    { \r\n\r\n        item_code: function(frm, cdt, cdn) \r\n\r\n            { \r\n\r\n  var d = locals[cdt][cdn];\r\n\r\n                console.log(\"Costo : \" + d.costo + \" y Item Code: \" + d.item_code);\r\n\r\n                frappe.call(\r\n\r\n                    { \r\n\r\n                        method: \"frappe.client.get_value\",\r\n\r\n                        args: { \r\n\r\n                            doctype: \"Item Price\", \r\n\r\n                            filters: {\r\n\r\n                               // price_list: frm.doc.mrp_price_list, \r\n\r\n                                price_list: \"MRP\", \r\n\r\n                                item_code: d.item_code\r\n\r\n                            },\r\n\r\n                            fieldname:[\"price_list_rate\"]\r\n\r\n                        },\r\n\r\n                        callback: function(r) \r\n\r\n                            \r\n\r\n                            { \r\n\r\n                                if(r.message) \r\n\r\n                                    { \r\n\r\n                                        var item_price = r.message; \r\n\r\n    \tconsole.log(\"mrp: \" + item_price.price_list_rate);\r\n                                    frappe.msgprint(__(\"MRP Rate: \"+'<b>'+ item_price.price_list_rate +'</b>'));\r\n                                  //   d.mrp = item_price.price_list_rate;\r\n\r\n                            }\r\n\r\n                            }\r\n\r\n                    });   \r\n\r\n            } \r\n\r\n    }\r\n\r\n);\r\n*/\r\n\r\n/*\r\n\r\n//                  LAST PURCHASE RATE GET\r\n\r\nfrappe.ui.form.on(\"Sales Invoice Item\", \r\n\r\n    { \r\n\r\n        item_code: function(frm, cdt, cdn) \r\n\r\n            { \r\n\r\n  var d = locals[cdt][cdn];\r\n\r\n                //console.log(\"Test : Item Code: \" + d.item_code);\r\n\r\n                frappe.call(\r\n\r\n                    { \r\n\r\n                        method: \"frappe.client.get_value\",\r\n\r\n                        args: { \r\n\r\n                            doctype: \"Item\", \r\n\r\n                            filters: {\r\n\r\n                               // price_list: frm.doc.mrp_price_list, \r\n\r\n                            //    price_list: \"MRP\", \r\n\r\n                                item_code: d.item_code\r\n\r\n                            },\r\n\r\n                            fieldname:[\"last_purchase_rate\"]\r\n\r\n                        },\r\n\r\n                        callback: function(r) \r\n\r\n                            \r\n\r\n                            { \r\n\r\n                                if(r.message) \r\n\r\n                                    { \r\n\r\n                                        var item_last_pur_rate = r.message; \r\n\r\n    \t                            //console.log(\"mrp: \" + item_last_pur_rate.last_purchase_rate);\r\n                                    frappe.msgprint(__(\"Last Purchase Rate: \"+'<b>'+ item_last_pur_rate.last_purchase_rate +'</b>'));\r\n\r\n                            }\r\n\r\n                            }\r\n\r\n                    });   \r\n\r\n            } \r\n\r\n    }\r\n\r\n);\r\n\r\n*/\r\n/*\r\nfrappe.ui.form.on(\"Sales Invoice Item\", \r\n\r\n    { \r\n\r\n        item_code: function(frm, cdt, cdn) \r\n\r\n            { \r\n\r\n  var d = locals[cdt][cdn];\r\n\r\n                //console.log(\"Test : Item Code: \" + d.item_code);\r\n\r\n                frappe.call(\r\n\r\n                    { \r\n\r\n                        method: \"frappe.client.get_value\",\r\n\r\n                        args: { \r\n\r\n                            doctype: \"Sales Invoice\", \r\n\r\n                            filters: {\r\n                                \r\n                                customer: d.customer,\r\n                                item_code: d.item_code\r\n                                \r\n\r\n                            },\r\n\r\n                            fieldname:[\"rate\"]\r\n\r\n                        },\r\n\r\n                        callback: function(r) \r\n\r\n                            \r\n\r\n                            { \r\n\r\n                                if(r.message) \r\n\r\n                                    { \r\n\r\n                                        var item_last_sales_rate = r.message; \r\n\r\n    \t                            //console.log(\"mrp: \" + item_last_pur_rate.last_purchase_rate);\r\n                                    frappe.msgprint(__(\"Last Sales Rate: \"+'<b>'+ item_last_sales_rate.rate +'</b>'));\r\n\r\n                            }\r\n\r\n                            }\r\n\r\n                    });   \r\n\r\n            } \r\n\r\n    }\r\n\r\n);\r\n*/\r\n/*\r\nfrappe.ui.form.on(\"Sales Invoice\", \"on_submit\", function(frm) {\r\n\r\n            $.each(cur_frm.doc.items || [], function(i, v) { // for each item on table do this\r\n\r\n                var precoAntigo;\r\n\r\n                frappe.call({\r\n\r\n                    method: \"frappe.client.get_list\",\r\n\r\n                    args: {\r\n\r\n                        doctype: \"Item Price\",\r\n\r\n                        filters: [\r\n\r\n                            ['price_list', \"=\", cur_frm.doc.selling_price_list],\r\n\r\n                            [\"item_code\", \"=\", v.item_code],\r\n\r\n                        ],\r\n\r\n                        fields: [\r\n\r\n\r\n\r\n                            \"price_list_rate\",\r\n\r\n                            \"name\"\r\n\r\n\r\n\r\n                        ]\r\n\r\n                    },\r\n\r\n                    callback: function(r) { // do this to found price list doc\r\n\r\n                        precoAntigo = (r.message[0].price_list_rate);\r\n\r\n                        var nomelista = r.message[0].name           \r\n\r\n                        // console.log(precoAntigo)\r\n\r\n                        if (precoAntigo && precoAntigo != v.rate) {\r\n\r\n                            frappe.confirm(\r\n\r\n                                `Deseja atualizar o pre\u00e7o do item ${v.item_name} de ${ precoAntigo } para ${ v.rate} na lista de pre\u00e7os ${cur_frm.doc.selling_price_list} ?`, //ask something to update price\r\n\r\n                                function() { // do this if ok\r\n\r\n                                    frappe.db.set_value(\"Item Price\", nomelista, \"price_list_rate\", v.rate)\r\n\r\n                                },\r\n\r\n                                function() { // do nothing if cancel\r\n\r\n                                    frappe.db.set_value(\"Item Price\", nomelista, \"customer\", cur_frm.doc.customer)\r\n\r\n                                }\r\n\r\n                                ,\r\n\r\n                                function(){\r\n\r\n                                    \r\n\r\n                                }\r\n\r\n\r\n\r\n                            )\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                });\r\n\r\n            })\r\n\r\n})\r\n*/",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 0,
  "modified": "2022-03-02 16:13:24.379430",
  "module": "Branch",
  "name": "Stock Entry-Form",
  "script": "frappe.ui.form.on(\"Stock Entry\", \"refresh\", function(frm) {\nif(frm.is_new())\n{\nfrm.doc.company_branch = undefined;\nfrm.refresh_field(\"company_branch\");\n}\n});\n\nfrappe.ui.form.on(\"Stock Entry\", \"onload\", function(frm) {\n    frm.set_query(\"company_branch\", function() {\n        return {\n            \"filters\": {\n                \"company\": frm.doc.company\n            }\n        };\n    });\n});\n\n\nfrappe.ui.form.on(\"Stock Entry\", \"company_branch\", function(frm) {\n    frm.set_query(\"from_warehouse\", function() {\n        if(frm.doc.stock_entry_type != \"Material Transfer\"){\n        return {\n            \"filters\": {\n                \"company\": frm.doc.company,\n                \"company_branch\": frm.doc.company_branch\n                }\n            };\n        }\n    });\n});\n\n\n\nfrappe.ui.form.on(\"Stock Entry\", \"company_branch\", function(frm) {\n    frm.set_query(\"to_warehouse\", function() {\n       // if(frm.doc.stock_entry_type != \"Material Transfer\"){\n        return {\n            \"filters\": {\n                \"company\": frm.doc.company,\n                \"company_branch\": frm.doc.company_branch\n       //     }\n            }\n        };\n    });\n});\n\n\n\n\n\nfrappe.ui.form.on(\"Stock Entry\", {\n  company_branch: function (frm) {\n    frm.set_query(\"s_warehouse\", \"items\", function (doc, cdt, cdn) {\n      let row = locals[cdt][cdn];\n      if(frm.doc.stock_entry_type != \"Material Transfer\"){\n      return {\n        \"filters\": {\n          \"company\": frm.doc.company,\n          \"company_branch\": frm.doc.company_branch\n        },\n      };\n      }\n    });\n  },\n});\n\n\n\n\n\n\nfrappe.ui.form.on(\"Stock Entry\", {\n  company_branch: function (frm) {\n    frm.set_query(\"t_warehouse\", \"items\", function (doc, cdt, cdn) {\n      let row = locals[cdt][cdn];\n      return {\n        \"filters\": {\n          \"company\": frm.doc.company,\n          \"company_branch\": frm.doc.company_branch\n        },\n      };\n    });\n  },\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 0,
  "modified": "2022-02-25 11:22:21.523625",
  "module": "Branch",
  "name": "Item-Form",
  "script": "frappe.ui.form.on(\"Item\", {\n  onload: function (frm) {\n    frm.set_query(\"company_branch\", \"item_defaults\", function (doc, cdt, cdn) {\n      let row = locals[cdt][cdn];\n      return {\n        \"filters\": {\n          \"company\": row.company\n        },\n      };\n    });\n  },\n});\n\nfrappe.ui.form.on(\"Item\", {\n  onload: function (frm) {\n    frm.set_query(\"default_warehouse\", \"item_defaults\", function (doc, cdt, cdn) {\n      let row = locals[cdt][cdn];\n      return {\n        \"filters\": {\n          \"company\": row.company,\n          \"company_branch\": row.company_branch,\n          \"is_group\": 0\n        },\n      };\n    });\n  },\n});\n\n\nfrappe.ui.form.on('Item', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__(\"Stock Ledger Branch\"), function() {\n\t\t\t\tfrappe.route_options = {\n\t\t\t\t\t\"item_code\": frm.doc.name\n\t\t\t\t};\n\t\t\t\tfrappe.set_route(\"query-report\", \"Stock Ledger Branch\");\n\t\t\t}, __(\"Branch Wise Report\"));\n\t}\n});\n\nfrappe.ui.form.on('Item', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__(\"Stock Balance Branch\"), function() {\n\t\t\t\tfrappe.route_options = {\n\t\t\t\t\t\"item_code\": frm.doc.name\n\t\t\t\t};\n\t\t\t\tfrappe.set_route(\"query-report\", \"Stock Balance Branch\");\n\t\t\t}, __(\"Branch Wise Report\"));\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2022-03-03 15:51:56.559289",
  "module": "Branch",
  "name": "Sales Order-Form",
  "script": "frappe.ui.form.on(\"Sales Order Item\", {\n    item_code: function(frm, cdt, cdn) {\n        //frm.doc.items = []\n        var d = locals[cdt][cdn];\n        frappe.call({\n            method: \"branch.api.get_refcode\",\n            // method: \"frappe.client.get_list\",\n            args: {\n               customer: frm.doc.customer,\n               item_code:d.item_code,\n                    'fieldname': ['customer_ref_code'],\n                        },\n            callback(r) {\n                if (r.message) {\n                    console.log(r.message);\n                        d.additional_notes = r.message;\n                }\n                \n            }\n \n        }); \n    \n    }\n});\n\nfrappe.ui.form.on(\"Sales Order Item\", {\n    item_code: function(frm, cdt, cdn) {\n        //frm.doc.items = []\n        var d = locals[cdt][cdn];\n        frappe.call({\n            method: \"branch.api.get_mrp\",\n            args: {\n              // customer: frm.doc.customer,\n               'item_code': d.item_code,\n               'price_list': frm.doc.selling_price_list,\n               'transaction_date': frm.doc.transaction_date,\n                     'fieldname': ['price_list_rate'],\n                        },\n            callback(r) {\n                if (r.message) {\n                    console.log(\"Hello\",r.message);\n                }\n                \n            }\n \n        }); \n    \n    }\n});\n    \n\n\n\n/*\nfrappe.ui.form.on(\"Sales Order Item\", {\n    item_code: function(frm, cdt, cdn) {\n        //frm.doc.items = []\n        var d = locals[cdt][cdn];\n        frappe.call({\n            method: \"frappe.client.get\",\n            args: {\n                doctype: \"Item\",\n                name: d.item_code,\n                cust_items:[\n                    {\n                        doctype: \"Item Customer Info\",\n                        parent: d.item_code,\n                        parenttype: \"Item\",\n                        customer: frm.doc.customer,\n                        },\n                        // {\n                        //     filters: {\n                        //         doctype: \"Item Customer Detail\",\n                        //         parent: d.item_code,\n                        //         parenttype: \"Item\",\n                        //         customer_name: frm.doc.customer,\n                        //     },\n                        // }\n                    ]\n            },\n            callback(r) {\n                if (r.message) {\n                    console.log(r.message.name,r.message.cust_items)\n                    \n                    for (var row in r.message.cust_items) {\n                        var rc = r.message.cust_items[row];\n                        if(frm.doc.customer == rc.customer){\n                        d.additional_notes = rc.customer_ref_code;\n                        }\n                        //console.log(rc.customer_name)\n                        return rc;\n                        \n                    }\n                   \n                    \n                }\n                \n            }\n \n        }); \n    \n    }\n});\n*/\n\n\n\n\n\n\n\n\n\n/*\n\nfrappe.ui.form.on(\"Sales Order\", \"onload\", function(frm) {\n    frm.set_query(\"company_branch\", function() {\n        return {\n            \"filters\": {\n                \"company\": frm.doc.company\n                }\n            };\n    });\n});\n\n\n\nfrappe.ui.form.on(\"Sales Order\", \"onload\", function(frm) {\n    frm.set_query(\"set_warehouse\", function() {\n        return {\n            \"filters\": {\n                \"company\": frm.doc.company,\n                \"company_branch\": frm.doc.company_branch\n                }\n            };\n    });\n});\n\n\n\nfrappe.ui.form.on(\"Sales Order\", {\n  onload: function (frm) {\n    frm.set_query(\"warehouse\", \"items\", function (doc, cdt, cdn) {\n      let row = locals[cdt][cdn];\n      return {\n        \"filters\": {\n          \"company\": frm.doc.company,\n          \"company_branch\": frm.doc.company_branch\n        },\n      };\n    });\n  },\n});\n\n*/\n\n/*\nfrappe.ui.form.on(\"Sales Order Item\",\n    { \n        item_code: function(frm, cdt, cdn) \n            {\n  var d = locals[cdt][cdn];\n                frappe.call(\n                    { \n                        method: \"frappe.client.get\",\n                        args: { \n                            doctype: \"Item\",\n                            name:d.item_code,\n                            filters: {\n                                name:d.item_code\n                            },\n                            customer_items:[\n                    {\n                        filters: {\n                                parenttype: \"Item\",\n                                patent: d.item_code,\n                                customer_name:frm.doc.customer\n                            },\n                    }\n                    ],\n                        },\n                        callback: function(r) \n                        {\n                \n                            if (r.message) {\n                                \n                    // console.log(r.message)\n                    //console.log(\"Ref Code: \",r.message.customer_items[0].ref_code)\n                    //d.additional_notes = r.message.customer_items[raw].ref_code;\n                    \n                  // for (var row in r.message.customer_items) {\n                //   d.additional_notes = r.message.customer_items[row].ref_code;\n                 \n                $.each(frm.doc.customer_items || [], function(i, v) {\n                    \n\t\t\t\t\td.additional_notes = r.message[i].ref_code;\n\t\t\t\t})\n\t\t\t\tfrm.refresh_field('customer_items');\n                        \n\n                 //   }\n                }\n                        \n                            }\n\n                   });   \n\n        } \n\n    }\n\n);\n*/\n\n\n/*\n\nfrappe.ui.form.on(\"Sales Order Item\", \"refresh\", function(frm) {\nif(frm.doc.customer)\n{\n    var d = locals[cdt][cdn];\n    d.additional_notes = undefined;\ncur_frm.refresh_field(\"additional_notes\");\n}\n});\n\nfrappe.ui.form.on(\"Sales Order Item\", {\n    item_code: function(frm, cdt, cdn) {\n        //frm.doc.items = []\n        var d = locals[cdt][cdn];\n        frappe.call({\n            method: \"frappe.client.get\",\n            args: {\n                doctype: \"Item\",\n                name: d.item_code,\n                customer_items:[\n                    {\n                        customer_name: frm.doc.customer\n                    }\n                    ]\n                \n            },\n            callback(r) {\n                if (r.message) {\n                    // console.log(r.message)\n                    //console.log(\"Ref Code: \",r.message.customer_items[0].ref_code)\n                    //d.additional_notes = r.message.customer_items[raw].ref_code;\n                    \n                    for (var row in r.message.customer_items) {\n                   d.additional_notes = r.message.customer_items[row].ref_code;\n    \n                    }\n                }\n                \n            }\n \n        }); \n    \n    }\n});\n*/",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 0,
  "modified": "2022-03-02 16:19:58.002690",
  "module": "Branch",
  "name": "Delivery Note-Form",
  "script": "frappe.ui.form.on(\"Delivery Note\", \"onload\", function(frm) {\n    frm.set_query(\"company_branch\", function() {\n        return {\n            \"filters\": {\n                \"company\": frm.doc.company\n                }\n            };\n    });\n});\n\n\n\nfrappe.ui.form.on(\"Delivery Note\", \"onload\", function(frm) {\n    frm.set_query(\"set_warehouse\", function() {\n        return {\n            \"filters\": {\n                \"company\": frm.doc.company,\n                \"company_branch\": frm.doc.company_branch\n                }\n            };\n    });\n});\n\n\n\nfrappe.ui.form.on(\"Delivery Note\", {\n  onload: function (frm) {\n    frm.set_query(\"warehouse\", \"items\", function (doc, cdt, cdn) {\n      let row = locals[cdt][cdn];\n      return {\n        \"filters\": {\n          \"company\": frm.doc.company,\n          \"company_branch\": frm.doc.company_branch\n        },\n      };\n    });\n  },\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 0,
  "modified": "2022-02-14 15:39:08.165890",
  "module": "Branch",
  "name": "Customer-Form",
  "script": "frappe.ui.form.on('Customer', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__(\"General Ledger\"), function() {\n\t\t\t\tfrappe.route_options = {\n\t\t\t\t\t\"party_type\": \"Customer\",\n\t\t\t\t\t\"party\": frm.doc.name\n\t\t\t\t};\n\t\t\t\tfrappe.set_route(\"query-report\", \"General Ledger\");\n\t\t\t}, __(\"View\"));\n\t}\n});\n\nfrappe.ui.form.on('Customer', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__(\"Trial Balance for Party\"), function() {\n\t\t\t\tfrappe.route_options = {\n\t\t\t\t\t\"party_type\": \"Customer\",\n\t\t\t\t\t\"party\": frm.doc.name\n\t\t\t\t};\n\t\t\t\tfrappe.set_route(\"query-report\", \"Trial Balance for Party\");\n\t\t\t}, __(\"View\"));\n\t}\n});\n\nfrappe.ui.form.on('Customer', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__(\"Item-wise Sales History\"), function() {\n\t\t\t\tfrappe.route_options = {\n\t\t\t\t\t\"customer\": frm.doc.name\n\t\t\t\t};\n\t\t\t\tfrappe.set_route(\"query-report\", \"Item-wise Sales History\");\n\t\t\t}, __(\"View\"));\n\t}\n});",
  "view": "Form"
 }
]